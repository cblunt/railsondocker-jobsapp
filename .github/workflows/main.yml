name: Docker Image CI

on:
  push:
    branches:
      - rails6
      - github-actions-deploy
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: SSH deploy
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: "cd jobsapp && docker-compose pull && docker-compose up -d web"
          host: ${{ secrets.DEPLOY_HOST }}
          username: deploy
          privateKey: ${{ secrets.DEPLOY_SSH_KEY }}
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/docker-cache
  #         key: ${{ runner.os }}-${{ github.repository }}-docker-layers-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-${{ github.repository }}-docker-layers

  #     - uses: actions/checkout@v2

  #     - name: Build and cache Docker Image
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: false
  #         load: true
  #         tags: jobsapp:latest
  #         cache-from: type=local,src=/tmp/docker-cache
  #         cache-to: type=local,dest=/tmp/docker-cache,mode=max

  # test:
  #   needs:
  #     - build

  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/docker-cache
  #         key: ${{ runner.os }}-${{ github.repository }}-docker-layers-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-${{ github.repository }}-docker-layers-

  #     - uses: actions/checkout@v2

  #     - name: Build and cache Docker Image
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: false
  #         load: true
  #         tags: jobsapp:latest
  #         cache-from: type=local,src=/tmp/docker-cache
  #         cache-to: type=local,dest=/tmp/docker-cache,mode=max

  #     - name: Run tests in Docker
  #       run: |
  #           if [ -f docker-compose.test.yml ]; then
  #             docker-compose -f docker-compose.yml -f docker-compose.test.yml run web bin/rails db:create db:schema:load
  #             docker-compose -f docker-compose.yml -f docker-compose.test.yml run web bin/rails test
  #           else
  #             echo "No docker-compose.test.yml file found"
  #             exit 1
  #           fi

  # publish:
  #   runs-on: ubuntu-latest

  #   needs:
  #     - build
  #     - test

  #   steps:
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Cache Docker layers
  #       uses: actions/cache@v2
  #       with:
  #         path: /tmp/docker-cache
  #         key: ${{ runner.os }}-${{ github.repository }}-docker-layers-${{ github.sha }}
  #         restore-keys: |
  #           ${{ runner.os }}-${{ github.repository }}-docker-layers-

  #     - uses: actions/checkout@v2

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GCR_PASSWORD }}

  #     - name: Build and publish Docker Image
  #       uses: docker/build-push-action@v2
  #       with:
  #         push: true
  #         tags: |
  #           ghcr.io/${{ github.actor }}/jobsapp:${{ github.sha }}
  #           ghcr.io/${{ github.actor }}/jobsapp:latest
  #         cache-from: type=local,src=/tmp/docker-cache
  #         cache-to: type=local,dest=/tmp/docker-cache,mode=max
