name: Docker Image CI

on:
  push:
    branches:
      - rails6
      - github-actions
  pull_request:

jobs:
  cache:
    runs-on: ubuntu-latest

    steps:
      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: .cache
          key: ${{ runner.os }}-docker-layers

      - name: Show the contents of the cache
        run: |
          ls -la .cache

          if [ -f .cache/jobsapp.tar ]; then
            echo "Cache hit"
          else
            echo "No cache found"
          fi


  test:
    runs-on: ubuntu-latest

    steps:
      - name: Cache docker build layers
        uses: actions/cache@v2
        with:
          path: .cache
          key: ${{ runner.os }}-docker-layers

      - uses: actions/checkout@v2

      - name: Build application Docker image
        run: |
          if [ -f .cache/jobsapp.tar ]; then
            docker load -i .cache/jobsapp.tar | true
            docker build --cache-from=jobsapp -t jobsapp:test .
          else
            docker build -t jobsapp:test .
          fi

      - name: Build and run tests in Docker
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose -f docker-compose.yml -f docker-compose.test.yml run web bin/rails db:create db:schema:load
            docker-compose -f docker-compose.yml -f docker-compose.test.yml run web bin/rails test
          else
            echo "No docker-compose.test.yml file found"
            exit 1
          fi

      - name: Cache the docker image layers
        run: |
          mkdir -p .caches
          docker save -o .caches/jobsapp.tar jobsapp

  build:
    needs: test

    runs-on: ubuntu-latest

    steps:
      - name: Cache docker build layers
        uses: actions/cache@v2
        with:
          path: .cache
          key: ${{ runner.os }}-docker-layers

      - uses: actions/checkout@v2

      - name: Build application Docker image
        run: |
          if [ -f .cache/jobsapp.tar ]; then
            docker load -i .cache/jobsapp.tar | true
            docker build --cache-from=jobsapp -t jobsapp .
          else
            docker build -t jobsapp .
          fi

      - name: Cache the docker image layers
        run: |
          mkdir -p .caches
          docker save -o .caches/jobsapp.tar jobsapp
